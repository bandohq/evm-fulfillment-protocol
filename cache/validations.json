{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)64_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)64_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)64_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)64_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)64_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)190_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:14",
        "version": {
          "withMetadata": "b14d0f6ce88206f897d15ffb108d9a9744492e530f7ccdf67f3e3375614b3f86",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:19",
        "version": {
          "withMetadata": "0efb87d2e3ac1cb31eaeb68e5b21d72a642dffd68d5688d6e5e158082b5c91ca",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "8b2d77357099d69bd630b9aab37edda0ddc82b3642e77027cb1888f9bcadea88",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:105"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:31",
        "version": {
          "withMetadata": "65e0e77e9f9258b4e54d1a00d1ab12db88eb252a2cef8406f710bcbd6a6cc67e",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "b05d9b4a3e3bc7cb099556192502a5c57829d3c5d63540d5512976ad30e4d8e0",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BandoERC20FulfillableV1.sol:BandoERC20FulfillableV1": {
        "src": "contracts/BandoERC20FulfillableV1.sol:26",
        "version": {
          "withMetadata": "27ab1ce072eacfdb0d5b7c2b51fef8c1c567a67fc04b40aa6f3091878cea58d0",
          "withoutMetadata": "84b8e10df2dd6591cf260df6cc36a9ccb618e6d8c16a0004532ee519788e5bef",
          "linkedWithoutMetadata": "84b8e10df2dd6591cf260df6cc36a9ccb618e6d8c16a0004532ee519788e5bef"
        },
        "inherit": [
          "contracts/IBandoERC20Fulfillable.sol:IBandoERC20Fulfillable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address payable,uint256,address,address)",
          "beneficiary()",
          "serviceID()",
          "depositsOf(address,address)",
          "fulfiller()",
          "recordsOf(address)",
          "record(uint256)",
          "depositERC20((address,address,uint256,uint256,string))",
          "withdrawERC20Refund(address,address)",
          "setERC20Fee(address,uint256)",
          "registerFulfillment((uint256,string,string,uint8))",
          "beneficiaryWithdraw(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BandoERC20FulfillableV1",
            "src": "contracts/BandoERC20FulfillableV1.sol:85"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_fulfillmentIdCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:45"
            },
            {
              "label": "_fulfillmentRecords",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ERC20FulFillmentRecord)6205_storage)",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:48"
            },
            {
              "label": "_fulfillmentRecordsForSubject",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:51"
            },
            {
              "label": "_fulfillmentRecordCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:54"
            },
            {
              "label": "_beneficiary",
              "offset": 0,
              "slot": "4",
              "type": "t_address_payable",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:57"
            },
            {
              "label": "_fulfiller",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:60"
            },
            {
              "label": "_manager",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:63"
            },
            {
              "label": "_router",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:66"
            },
            {
              "label": "_deposits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:69"
            },
            {
              "label": "_authorized_refunds",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:70"
            },
            {
              "label": "_serviceIdentifier",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:73"
            },
            {
              "label": "_feeAmounts",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:76"
            },
            {
              "label": "_releaseablePools",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BandoERC20FulfillableV1",
              "src": "contracts/BandoERC20FulfillableV1.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_enum(FulFillmentResultState)6142": {
              "label": "enum FulFillmentResultState",
              "members": [
                "FAILED",
                "SUCCESS",
                "PENDING"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ERC20FulFillmentRecord)6205_storage)": {
              "label": "mapping(uint256 => struct ERC20FulFillmentRecord)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC20FulFillmentRecord)6205_storage": {
              "label": "struct ERC20FulFillmentRecord",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "serviceRef",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fulfiller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "externalID",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "payer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "tokenAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "feeAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "fiatAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "entryTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "receiptURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "status",
                  "type": "t_enum(FulFillmentResultState)6142",
                  "offset": 0,
                  "slot": "11"
                }
              ],
              "numberOfBytes": "384"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BandoERC20FulfillmentManagerV1.sol:BandoERC20FulfillmentManagerV1": {
        "src": "contracts/BandoERC20FulfillmentManagerV1.sol:36",
        "version": {
          "withMetadata": "4489434748fcecf6f2db455f162c2ad4d4785da14db81ed6f3aedaa1657e6e43",
          "withoutMetadata": "0371b9008493532574d6949a69ef7e74b2e29a65e5fb8899b7214244110c218f",
          "linkedWithoutMetadata": "0371b9008493532574d6949a69ef7e74b2e29a65e5fb8899b7214244110c218f"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "enableERC20Service(uint256,address payable,address,address)",
          "withdrawERC20Refund(uint256,address,address)",
          "registerFulfillment(uint256,(uint256,string,string,uint8))"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BandoERC20FulfillmentManagerV1",
            "src": "contracts/BandoERC20FulfillmentManagerV1.sol:42"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_serviceRegistry",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BandoERC20FulfillmentManagerV1",
              "src": "contracts/BandoERC20FulfillmentManagerV1.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BandoERC20RouterV1.sol:BandoERC20RouterV1": {
        "src": "contracts/BandoERC20RouterV1.sol:23",
        "version": {
          "withMetadata": "b5c363ba2803c3a4a98a2bb4517d54092117fe630507c5368dd769540c9282eb",
          "withoutMetadata": "7548b61cac434908407b81cdf8cdcd55f34183a154af3141e71ec864d39f26e5",
          "linkedWithoutMetadata": "7548b61cac434908407b81cdf8cdcd55f34183a154af3141e71ec864d39f26e5"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "initialize(address,address)",
          "pause()",
          "unpause()",
          "requestService(uint256,(address,address,uint256,uint256,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_fulfillableRegistry",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BandoERC20RouterV1",
              "src": "contracts/BandoERC20RouterV1.sol:31"
            },
            {
              "label": "_tokenRegistry",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BandoERC20RouterV1",
              "src": "contracts/BandoERC20RouterV1.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)64_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)190_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BandoFulfillableV1.sol:BandoFulfillableV1": {
        "src": "contracts/BandoFulfillableV1.sol:24",
        "version": {
          "withMetadata": "f8604f2db7fa8a27d1db1c01611a5301a47b9fb08d6f94247cdeac12fb2926fb",
          "withoutMetadata": "0da00860d0c027e370f29614aaf59c386c8419954b4326f28a5961671c48618f",
          "linkedWithoutMetadata": "0da00860d0c027e370f29614aaf59c386c8419954b4326f28a5961671c48618f"
        },
        "inherit": [
          "contracts/IBandoFulfillable.sol:IBandoFulfillable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "(address payable,uint256,uint256,address,address)",
          "beneficiary()",
          "serviceID()",
          "depositsOf(address)",
          "fulfiller()",
          "recordsOf(address)",
          "record(uint256)",
          "deposit((address,uint256,uint256,string))",
          "withdrawRefund(address payable)",
          "setFee(uint256)",
          "registerFulfillment((uint256,string,string,uint8))",
          "beneficiaryWithdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BandoFulfillableV1",
            "src": "contracts/BandoFulfillableV1.sol:81"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_fulfillmentIdCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:42"
            },
            {
              "label": "_fulfillmentRecords",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(FulFillmentRecord)6167_storage)",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:45"
            },
            {
              "label": "_fulfillmentRecordsForSubject",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:48"
            },
            {
              "label": "_fulfillmentRecordCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:51"
            },
            {
              "label": "_beneficiary",
              "offset": 0,
              "slot": "4",
              "type": "t_address_payable",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:54"
            },
            {
              "label": "_fulfiller",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:57"
            },
            {
              "label": "_manager",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:60"
            },
            {
              "label": "_router",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:63"
            },
            {
              "label": "_deposits",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:65"
            },
            {
              "label": "_authorized_refunds",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:66"
            },
            {
              "label": "_serviceIdentifier",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:69"
            },
            {
              "label": "_feeAmount",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:72"
            },
            {
              "label": "_releaseablePool",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "BandoFulfillableV1",
              "src": "contracts/BandoFulfillableV1.sol:75"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_enum(FulFillmentResultState)6142": {
              "label": "enum FulFillmentResultState",
              "members": [
                "FAILED",
                "SUCCESS",
                "PENDING"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(FulFillmentRecord)6167_storage)": {
              "label": "mapping(uint256 => struct FulFillmentRecord)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(FulFillmentRecord)6167_storage": {
              "label": "struct FulFillmentRecord",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "serviceRef",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "fulfiller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "externalID",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "payer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "weiAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "feeAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "fiatAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "entryTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "receiptURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "status",
                  "type": "t_enum(FulFillmentResultState)6142",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BandoFulfillmentManagerV1.sol:BandoFulfillmentManagerV1": {
        "src": "contracts/BandoFulfillmentManagerV1.sol:37",
        "version": {
          "withMetadata": "5b84efbcdb92dece6fab2864f3bd604aa8e0cb28d7af33f151b028e3b5d734cb",
          "withoutMetadata": "5c2883d8fe049b304a0a5a0ea7923f255bf97a0641996834ba2a5688120eca73",
          "linkedWithoutMetadata": "5c2883d8fe049b304a0a5a0ea7923f255bf97a0641996834ba2a5688120eca73"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "setService(uint256,address payable,uint256,address,address)",
          "setServiceRef(uint256,string)",
          "withdrawRefund(uint256,address payable)",
          "registerFulfillment(uint256,(uint256,string,string,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_serviceRegistry",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BandoFulfillmentManagerV1",
              "src": "contracts/BandoFulfillmentManagerV1.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)64_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/BandoRouterV1.sol:BandoRouterV1": {
        "src": "contracts/BandoRouterV1.sol:23",
        "version": {
          "withMetadata": "8f30c2d7752500cb3cb4929d2b72d97ab1fc8b3694ea93f139bb9dcf88fe22a5",
          "withoutMetadata": "6d031f31691b58509303b8f86909b6efe615750fac4c966fc5f646539c263137",
          "linkedWithoutMetadata": "6d031f31691b58509303b8f86909b6efe615750fac4c966fc5f646539c263137"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "initialize(address)",
          "pause()",
          "unpause()",
          "requestService(uint256,(address,uint256,uint256,string))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_fulfillableRegistry",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BandoRouterV1",
              "src": "contracts/BandoRouterV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)64_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)190_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/IBandoERC20Fulfillable.sol:IBandoERC20Fulfillable": {
        "src": "contracts/IBandoERC20Fulfillable.sol:13",
        "inherit": [],
        "libraries": [],
        "methods": [
          "depositERC20((address,address,uint256,uint256,string))",
          "setERC20Fee(address,uint256)",
          "registerFulfillment((uint256,string,string,uint8))",
          "serviceID()",
          "fulfiller()",
          "recordsOf(address)",
          "record(uint256)",
          "withdrawERC20Refund(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/IBandoFulfillable.sol:IBandoFulfillable": {
        "src": "contracts/IBandoFulfillable.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit((address,uint256,uint256,string))",
          "setFee(uint256)",
          "registerFulfillment((uint256,string,string,uint8))",
          "serviceID()",
          "fulfiller()",
          "recordsOf(address)",
          "record(uint256)",
          "withdrawRefund(address payable)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/RouterUpgradeTester.sol:RouterUpgradeTester": {
        "src": "contracts/RouterUpgradeTester.sol:9",
        "version": {
          "withMetadata": "33e99e71183a5d7f9bbab43399a7bf037bda7be7a6c9e5b06ccc5a961e3b7cc6",
          "withoutMetadata": "d3301d30bab14562516cba8b62bd2b4269e0651b0c3d4c9f5ebd4acd08191bfd",
          "linkedWithoutMetadata": "d3301d30bab14562516cba8b62bd2b4269e0651b0c3d4c9f5ebd4acd08191bfd"
        },
        "inherit": [
          "contracts/BandoRouterV1.sol:BandoRouterV1",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "isUpgrade()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_fulfillableRegistry",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BandoRouterV1",
              "src": "contracts/BandoRouterV1.sol:31"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)64_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)190_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/periphery/registry/ERC20TokenRegistry.sol:ERC20TokenRegistry": {
        "src": "contracts/periphery/registry/ERC20TokenRegistry.sol:7",
        "version": {
          "withMetadata": "634143bb3ed292ebd6cd68fb1417e5779dd21e316b2ab0180fb8dfd6a0f15226",
          "withoutMetadata": "ae83e333e779e951d65d95c725ce6a835dafdd619b25b516e5306d15501f1bce",
          "linkedWithoutMetadata": "ae83e333e779e951d65d95c725ce6a835dafdd619b25b516e5306d15501f1bce"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "isTokenWhitelisted(address)",
          "addToken(address)",
          "removeToken(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "whitelist",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ERC20TokenRegistry",
              "src": "contracts/periphery/registry/ERC20TokenRegistry.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)64_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/periphery/registry/FulfillableRegistry.sol:FulfillableRegistry": {
        "src": "contracts/periphery/registry/FulfillableRegistry.sol:19",
        "version": {
          "withMetadata": "a63c147e1699b46f25524c769a4c73f49a619ab79ca5e1af23a8fc6acb7545a7",
          "withoutMetadata": "0e2d0cc780b1858aa9e4fccbaefbcd2ce42d44ca2780e2a577c3a517c91f2cf7",
          "linkedWithoutMetadata": "0e2d0cc780b1858aa9e4fccbaefbcd2ce42d44ca2780e2a577c3a517c91f2cf7"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "contracts/periphery/registry/IFulfillableRegistry.sol:IFulfillableRegistry"
        ],
        "libraries": [],
        "methods": [
          "initialize()",
          "addService(uint256,(uint256,address,address,address,uint256))",
          "addFulfiller(address)",
          "getService(uint256)",
          "removeServiceAddress(uint256)",
          "addServiceRef(uint256,string)",
          "isRefValid(uint256,string)",
          "enableERC20(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_serviceRegistry",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(Service)6780_storage)",
              "contract": "FulfillableRegistry",
              "src": "contracts/periphery/registry/FulfillableRegistry.sol:21"
            },
            {
              "label": "_serviceRefs",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)",
              "contract": "FulfillableRegistry",
              "src": "contracts/periphery/registry/FulfillableRegistry.sol:23"
            },
            {
              "label": "_fulfillers",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_struct(Service)6780_storage)dyn_storage)",
              "contract": "FulfillableRegistry",
              "src": "contracts/periphery/registry/FulfillableRegistry.sol:25"
            },
            {
              "label": "_serviceCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "FulfillableRegistry",
              "src": "contracts/periphery/registry/FulfillableRegistry.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)64_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(OwnableStorage)14_storage": {
              "label": "struct OwnableUpgradeable.OwnableStorage",
              "members": [
                {
                  "label": "_owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Service)6780_storage)dyn_storage": {
              "label": "struct Service[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_struct(Service)6780_storage)dyn_storage)": {
              "label": "mapping(address => struct Service[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
              "label": "mapping(uint256 => string[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Service)6780_storage)": {
              "label": "mapping(uint256 => struct Service)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Service)6780_storage": {
              "label": "struct Service",
              "members": [
                {
                  "label": "serviceId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "contractAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "erc20ContractAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fulfiller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "feeAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.Ownable": [
              {
                "contract": "OwnableUpgradeable",
                "label": "_owner",
                "type": "t_address",
                "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.20"
      },
      "contracts/periphery/registry/IERC20TokenRegistry.sol:IERC20TokenRegistry": {
        "src": "contracts/periphery/registry/IERC20TokenRegistry.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTokenWhitelisted(address)",
          "addToken(address)",
          "removeToken(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/periphery/registry/IFulfillableRegistry.sol:IFulfillableRegistry": {
        "src": "contracts/periphery/registry/IFulfillableRegistry.sol:30",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addService(uint256,(uint256,address,address,address,uint256))",
          "addFulfiller(address)",
          "getService(uint256)",
          "removeServiceAddress(uint256)",
          "addServiceRef(uint256,string)",
          "isRefValid(uint256,string)",
          "enableERC20(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      },
      "contracts/test/TestERC20.sol:DemoToken": {
        "src": "contracts/test/TestERC20.sol:6",
        "version": {
          "withMetadata": "7862f2117666d34622d5e13c5c1977bf8edfb75e77e665440b16662177de4bb4",
          "withoutMetadata": "127f2cea57278982e857e03eafbc4749d28c9313fd22cd2255a615e3cc82d307",
          "linkedWithoutMetadata": "127f2cea57278982e857e03eafbc4749d28c9313fd22cd2255a615e3cc82d307"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DemoToken",
            "src": "contracts/test/TestERC20.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.20"
      }
    }
  ]
}